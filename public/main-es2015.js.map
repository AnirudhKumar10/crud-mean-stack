{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/add-contact/add-contact.component.ts","./src/app/add-contact/add-contact.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/contact.service.ts","./src/app/contact.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/update-contact/update-contact.component.ts","./src/app/update-contact/update-contact.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { Contact } from '../contact';\nimport { Router } from '@angular/router';\nimport { ContactService } from '../contact.service';\n\n@Component({\n  selector: 'app-add-contact',\n  templateUrl: './add-contact.component.html',\n  styleUrls: ['./add-contact.component.css'],\n})\nexport class AddContactComponent {\n  contact = new Contact();\n\n  constructor(private router: Router, private contactService: ContactService) {}\n\n  addContact() {\n    this.contactService.addContact(this.contact).subscribe((data) => {\n      console.log(data);\n      this.router.navigate(['/']);\n    });\n  }\n\n  back() {\n    this.router.navigate(['/']);\n  }\n}\n","<div class=\"row\">\n  <div class=\"col m-3\">\n    <form>\n      <div class=\"form-group\">\n        <label for=\"my-input\">Name</label>\n        <input\n          id=\"my-input\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"contact.name\"\n          [(ngModel)]=\"contact.name\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"my-input\">Email</label>\n        <input\n          id=\"my-input\"\n          class=\"form-control\"\n          type=\"email\"\n          name=\"contact.email\"\n          [(ngModel)]=\"contact.email\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"my-input\">Balance</label>\n        <input\n          id=\"my-input\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"contact.balance\"\n          [(ngModel)]=\"contact.balance\"\n        />\n      </div>\n      <button class=\"btn bg-white text-danger mr-3 px-3 p-2\" (click)=\"back()\">\n        Back\n      </button>\n      <button class=\"btn btn-success px-3 p-2\" (click)=\"addContact()\">\n        <i class=\"fas fa-check\"></i> Save\n      </button>\n    </form>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UpdateContactComponent } from './update-contact/update-contact.component';\nimport { AddContactComponent } from './add-contact/add-contact.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\nconst routes: Routes = [\n  { path: '', component: DashboardComponent },\n  { path: 'add-contact', component: AddContactComponent },\n  { path: 'update-contact/:id', component: UpdateContactComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\nexport const routingComponents = [\n  UpdateContactComponent,\n  AddContactComponent,\n  DashboardComponent,\n];\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'client';\n}\n","<div class=\"container\">\n  <nav class=\"navbar navbar-light  bg-light\">\n    <a class=\"navbar-brand\" href=\"#\">\n      <img src=\"https://img.icons8.com/ios-filled/50/000000/new-contact.png\" />\n      CONTACT APP - Mean Stack\n    </a>\n  </nav>\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { routingComponents } from './app-routing.module';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [AppComponent, routingComponents],\n  imports: [BrowserModule, AppRoutingModule, HttpClientModule, FormsModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { Contact } from './contact';\nimport { HttpClient } from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ContactService {\n\n  constructor(private http: HttpClient) {}\n\n  contact: Contact[];\n  url = '/clients';\n\n  getContact(id) {\n    return this.http.get(this.url+'/'+id)\n  }\n\n  getAllContact() {\n    return this.http.get(this.url)\n  }\n\n  addContact(contact) {\n    return this.http.post(this.url+'/add', contact)\n  }\n\n  updateContact(id, contact) {\n    return this.http.put(this.url+'/update/'+id, contact)\n  }\n\n  deleteContact(id) {\n    return this.http.delete(this.url+'/remove/'+id)\n  }\n}\n","export class Contact {\n    _id: Object;\n    name: String;\n    email: String;\n    balance: Number;\n}","import { Component } from '@angular/core';\nimport { ContactService } from '../contact.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n})\nexport class DashboardComponent {\n  contacts;\n\n  constructor(private contactService: ContactService, private router: Router) {}\n\n  ngOnInit() {\n    this.contactService.getAllContact().subscribe((data) => {\n      this.contacts = data;\n    });\n  }\n\n  createContact() {\n    this.router.navigate(['/add-contact']);\n  }\n\n  editContact(id) {\n    this.router.navigate(['/update-contact/' + id]);\n  }\n\n  deleteContact(id) {\n    this.contactService.deleteContact(id).subscribe((data) => {\n      console.log(data);\n      this.contactService.getAllContact().subscribe((data) => {\n        this.contacts = data;\n      });\n    });\n  }\n}\n","<div class=\"row my-3\">\n  <div class=\"col\">\n    <button class=\"btn btn-dark\" (click)=\"createContact()\">\n      <i class=\"fas fa-plus\"></i> Create New Contact\n    </button>\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"col\">\n    <table class=\"table table-light\">\n      <thead class=\"thead-light\">\n        <tr>\n          <th>Name</th>\n          <th>Email</th>\n          <th>Balance</th>\n          <th></th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let contact of contacts\">\n          <td>{{ contact.name }}</td>\n          <td>{{ contact.email }}</td>\n          <td>{{ contact.balance }}</td>\n          <td>\n            <button\n              class=\"btn btn-secondary px-5\"\n              (click)=\"editContact(contact._id)\"\n            >\n              Edit\n            </button>\n          </td>\n          <td>\n            <button\n              class=\"btn bg-white text-danger p-2\"\n              (click)=\"deleteContact(contact._id)\"\n            >\n              Delete\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ContactService } from '../contact.service';\n\n@Component({\n  selector: 'app-update-contact',\n  templateUrl: './update-contact.component.html',\n  styleUrls: ['./update-contact.component.css'],\n})\nexport class UpdateContactComponent {\n  contact;\n\n  ngOnInit() {\n    this.contactService\n      .getContact(this.id)\n      .subscribe((data) => (this.contact = data));\n  }\n\n  constructor(\n    private router: Router,\n    private contactService: ContactService,\n    private route: ActivatedRoute\n  ) {}\n\n  id = this.route.snapshot.params.id;\n\n  updateContact() {\n    this.contactService\n      .updateContact(this.id, this.contact)\n      .subscribe((data) => {\n        console.log(data);\n        this.router.navigate(['/']);\n      });\n  }\n\n  cancel() {\n    this.router.navigate(['/']);\n  }\n}\n","<div class=\"row\">\n  <div class=\"col m-3\">\n    <form>\n      <div class=\"form-group\">\n        <label for=\"my-input\">Name</label>\n        <input\n          id=\"my-input\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"name\"\n          [(ngModel)]=\"contact.name\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"my-input\">Email</label>\n        <input\n          id=\"my-input\"\n          class=\"form-control\"\n          type=\"email\"\n          name=\"email\"\n          [(ngModel)]=\"contact.email\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"my-input\">Balance</label>\n        <input\n          id=\"my-input\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"balance\"\n          [(ngModel)]=\"contact.balance\"\n        />\n      </div>\n      <button class=\"btn bg-white text-danger mr-3 px-3 p-2\" (click)=\"cancel()\">\n        Cancel\n      </button>\n      <button class=\"btn btn-success px-3 p-2\" (click)=\"updateContact()\">\n        Update\n      </button>\n    </form>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}