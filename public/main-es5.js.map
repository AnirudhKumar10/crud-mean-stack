{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/add-contact/add-contact.component.ts","webpack:///src/app/add-contact/add-contact.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/contact.service.ts","webpack:///src/app/contact.ts","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/update-contact/update-contact.component.ts","webpack:///src/app/update-contact/update-contact.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AddContactComponent","router","contactService","contact","addContact","subscribe","data","console","log","navigate","back","selector","templateUrl","styleUrls","routes","path","component","AppRoutingModule","forRoot","imports","routingComponents","AppComponent","title","AppModule","declarations","providers","bootstrap","ContactService","http","url","get","post","put","providedIn","Contact","DashboardComponent","getAllContact","contacts","deleteContact","createContact","UpdateContactComponent","route","snapshot","params","getContact","updateContact","cancel","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { Contact } from '../contact';\nimport { Router } from '@angular/router';\nimport { ContactService } from '../contact.service';\n\n@Component({\n  selector: 'app-add-contact',\n  templateUrl: './add-contact.component.html',\n  styleUrls: ['./add-contact.component.css'],\n})\nexport class AddContactComponent {\n  contact = new Contact();\n\n  constructor(private router: Router, private contactService: ContactService) {}\n\n  addContact() {\n    this.contactService.addContact(this.contact).subscribe((data) => {\n      console.log(data);\n      this.router.navigate(['/']);\n    });\n  }\n\n  back() {\n    this.router.navigate(['/']);\n  }\n}\n","<div class=\"row\">\n  <div class=\"col m-3\">\n    <form>\n      <div class=\"form-group\">\n        <label for=\"my-input\">Name</label>\n        <input\n          id=\"my-input\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"contact.name\"\n          [(ngModel)]=\"contact.name\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"my-input\">Email</label>\n        <input\n          id=\"my-input\"\n          class=\"form-control\"\n          type=\"email\"\n          name=\"contact.email\"\n          [(ngModel)]=\"contact.email\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"my-input\">Balance</label>\n        <input\n          id=\"my-input\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"contact.balance\"\n          [(ngModel)]=\"contact.balance\"\n        />\n      </div>\n      <button class=\"btn bg-white text-danger mr-3 px-3 p-2\" (click)=\"back()\">\n        Back\n      </button>\n      <button class=\"btn btn-success px-3 p-2\" (click)=\"addContact()\">\n        <i class=\"fas fa-check\"></i> Save\n      </button>\n    </form>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UpdateContactComponent } from './update-contact/update-contact.component';\nimport { AddContactComponent } from './add-contact/add-contact.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\nconst routes: Routes = [\n  { path: '', component: DashboardComponent },\n  { path: 'add-contact', component: AddContactComponent },\n  { path: 'update-contact/:id', component: UpdateContactComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\nexport const routingComponents = [\n  UpdateContactComponent,\n  AddContactComponent,\n  DashboardComponent,\n];\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'client';\n}\n","<div class=\"container\">\n  <nav class=\"navbar navbar-light  bg-light\">\n    <a class=\"navbar-brand\" href=\"#\">\n      <img src=\"https://img.icons8.com/ios-filled/50/000000/new-contact.png\" />\n      CONTACT APP - Mean Stack\n    </a>\n  </nav>\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { routingComponents } from './app-routing.module';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [AppComponent, routingComponents],\n  imports: [BrowserModule, AppRoutingModule, HttpClientModule, FormsModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { Contact } from './contact';\nimport { HttpClient } from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ContactService {\n\n  constructor(private http: HttpClient) {}\n\n  contact: Contact[];\n  url = '/clients';\n\n  getContact(id) {\n    return this.http.get(this.url+'/'+id)\n  }\n\n  getAllContact() {\n    return this.http.get(this.url)\n  }\n\n  addContact(contact) {\n    return this.http.post(this.url+'/add', contact)\n  }\n\n  updateContact(id, contact) {\n    return this.http.put(this.url+'/update/'+id, contact)\n  }\n\n  deleteContact(id) {\n    return this.http.delete(this.url+'/remove/'+id)\n  }\n}\n","export class Contact {\n    _id: Object;\n    name: String;\n    email: String;\n    balance: Number;\n}","import { Component } from '@angular/core';\nimport { ContactService } from '../contact.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n})\nexport class DashboardComponent {\n  contacts;\n\n  constructor(private contactService: ContactService, private router: Router) {}\n\n  ngOnInit() {\n    this.contactService.getAllContact().subscribe((data) => {\n      this.contacts = data;\n    });\n  }\n\n  createContact() {\n    this.router.navigate(['/add-contact']);\n  }\n\n  editContact(id) {\n    this.router.navigate(['/update-contact/' + id]);\n  }\n\n  deleteContact(id) {\n    this.contactService.deleteContact(id).subscribe((data) => {\n      console.log(data);\n      this.contactService.getAllContact().subscribe((data) => {\n        this.contacts = data;\n      });\n    });\n  }\n}\n","<div class=\"row my-3\">\n  <div class=\"col\">\n    <button class=\"btn btn-dark\" (click)=\"createContact()\">\n      <i class=\"fas fa-plus\"></i> Create New Contact\n    </button>\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"col\">\n    <table class=\"table table-light\">\n      <thead class=\"thead-light\">\n        <tr>\n          <th>Name</th>\n          <th>Email</th>\n          <th>Balance</th>\n          <th></th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let contact of contacts\">\n          <td>{{ contact.name }}</td>\n          <td>{{ contact.email }}</td>\n          <td>{{ contact.balance }}</td>\n          <td>\n            <button\n              class=\"btn btn-secondary px-5\"\n              (click)=\"editContact(contact._id)\"\n            >\n              Edit\n            </button>\n          </td>\n          <td>\n            <button\n              class=\"btn bg-white text-danger p-2\"\n              (click)=\"deleteContact(contact._id)\"\n            >\n              Delete\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ContactService } from '../contact.service';\n\n@Component({\n  selector: 'app-update-contact',\n  templateUrl: './update-contact.component.html',\n  styleUrls: ['./update-contact.component.css'],\n})\nexport class UpdateContactComponent {\n  contact;\n\n  ngOnInit() {\n    this.contactService\n      .getContact(this.id)\n      .subscribe((data) => (this.contact = data));\n  }\n\n  constructor(\n    private router: Router,\n    private contactService: ContactService,\n    private route: ActivatedRoute\n  ) {}\n\n  id = this.route.snapshot.params.id;\n\n  updateContact() {\n    this.contactService\n      .updateContact(this.id, this.contact)\n      .subscribe((data) => {\n        console.log(data);\n        this.router.navigate(['/']);\n      });\n  }\n\n  cancel() {\n    this.router.navigate(['/']);\n  }\n}\n","<div class=\"row\">\n  <div class=\"col m-3\">\n    <form>\n      <div class=\"form-group\">\n        <label for=\"my-input\">Name</label>\n        <input\n          id=\"my-input\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"name\"\n          [(ngModel)]=\"contact.name\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"my-input\">Email</label>\n        <input\n          id=\"my-input\"\n          class=\"form-control\"\n          type=\"email\"\n          name=\"email\"\n          [(ngModel)]=\"contact.email\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"my-input\">Balance</label>\n        <input\n          id=\"my-input\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"balance\"\n          [(ngModel)]=\"contact.balance\"\n        />\n      </div>\n      <button class=\"btn bg-white text-danger mr-3 px-3 p-2\" (click)=\"cancel()\">\n        Cancel\n      </button>\n      <button class=\"btn btn-success px-3 p-2\" (click)=\"updateContact()\">\n        Update\n      </button>\n    </form>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}